apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: smf-core-59bcf4576c
  namespace: oai-core
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "1"
    deployment.kubernetes.io/revision: "1"
  labels:
    app.kubernetes.io/managed-by: configmanagement.gke.io
    configsync.gke.io/declared-version: v1alpha1
    pod-template-hash: 59bcf4576c
    workload.nephio.org/oai: smf
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: smf-core
    uid: bedf87aa-8fee-40fb-96ce-3000a330b318
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: configmanagement.gke.io
      configsync.gke.io/declared-version: v1alpha1
      pod-template-hash: 59bcf4576c
      workload.nephio.org/oai: smf
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[{"name": "smf-core-n4", "interface": "n4",
          "ips": ["172.1.1.254/24"], "gateway": ["172.1.1.1"]}]'
      labels:
        app.kubernetes.io/managed-by: configmanagement.gke.io
        configsync.gke.io/declared-version: v1alpha1
        pod-template-hash: 59bcf4576c
        workload.nephio.org/oai: smf
    spec:
      containers:
      - command:
        - /openair-smf/bin/oai_smf
        - -c
        - /openair-smf/etc/smf.yaml
        - -o
        image: docker.io/oaisoftwarealliance/oai-smf:v2.0.1
        imagePullPolicy: IfNotPresent
        name: smf-core
        ports:
        - containerPort: 8805
          name: n4
          protocol: UDP
        - containerPort: 80
          name: sbi
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - mountPath: /openair-smf/etc
          name: configuration
      initContainers:
      - command:
        - sh
        - -c
        - until curl --connect-timeout 1 --head -X GET http://oai-nrf/nnrf-nfm/v1/nf-instances?nf-type='NRF'
          --http2-prior-knowledge; do echo waiting for nrf svc oai-nrf to respond;
          sleep 1; done
        image: docker.io/alpine/curl:3.14
        imagePullPolicy: IfNotPresent
        name: init
      volumes:
      - configMap:
          defaultMode: 420
          name: smf-core
        name: configuration
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      serviceAccountName: smf-core
      terminationGracePeriodSeconds: 5